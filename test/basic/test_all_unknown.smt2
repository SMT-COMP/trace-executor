unknown
unknown
unknown
unknown
unknown
unknown
unknown
unknown
unknown
unknown
unknown
unknown
unknown
unknown
--- BENCHMARK BEGINS HERE ---
(set-logic AUFNIRA)
(declare-sort x1 0)
(declare-fun x2 () x1)
(declare-fun x3 () x1)
(assert (forall ((x4 x1)) (or (= x3 x4) (= x2 x4))))
(assert (not (= x2 x3)))
(declare-sort x4 0)
(declare-fun x5 (Int Int) Int)
(declare-fun x6 (Int Int) Int)
(declare-sort x7 0)
(declare-sort x8 0)
(declare-sort x9 0)
(declare-fun x22 (x8) x4)
(declare-fun x13 () x9)
(declare-fun x16 (x1) x7)
(declare-fun x12 () x9)
(declare-fun x10 () x9)
(declare-fun x17 (Real) x7)
(declare-fun x14 (x9 x7) x8)
(declare-fun x21 (x8) Real)
(declare-fun x19 (x8) Int)
(declare-fun x20 (x8) x1)
(declare-fun x11 () x9)
(declare-fun x18 (x4) x7)
(declare-fun x15 (Int) x7)
(assert (forall ((x23 x1)) (= (x20 (x14 x11 (x16 x23))) x23)))
(assert (forall ((x23 x7)) (= x23 (x16 (x20 (x14 x11 x23))))))
(assert (forall ((x23 x7)) (= x23 (x17 (x21 (x14 x12 x23))))))
(assert (forall ((x23 x7)) (= (x18 (x22 (x14 x13 x23))) x23)))
(assert (forall ((x23 x4)) (= x23 (x22 (x14 x13 (x18 x23))))))
(assert (forall ((x23 Real)) (= (x21 (x14 x12 (x17 x23))) x23)))
(assert (forall ((x23 x7)) (= (x15 (x19 (x14 x10 x23))) x23)))
(assert (forall ((x23 Int)) (= (x19 (x14 x10 (x15 x23))) x23)))
(declare-fun x24 (x4 x4) Bool)
(declare-fun x23 (x4 x4) Bool)
(declare-fun x29 (Int Int) Bool)
(declare-fun x27 (Int Int) Bool)
(declare-fun x28 (Int Int) Bool)
(declare-fun x26 (x1 x1) Bool)
(declare-fun x25 (x1 x1) Bool)
(assert (forall ((x30 Int)) (forall ((x31 Int)) (let ((x32 (and (>= x31 0) (> x31 x30)))) (= x32 x32)))))
(declare-fun x33 (x1) x1)
(declare-fun x30 (x1 x1) x1)
(declare-fun x32 (x1 x1) x1)
(declare-fun x31 (x1 x1) x1)
(assert (forall ((x34 x1)) (forall ((x35 x1)) (= (= (x32 x34 x35) x2) (not (= x34 x35))))))
(assert (forall ((x34 x1)) (forall ((x35 x1)) (= (= (x31 x34 x35) x2) (or (= x2 x34) (= x35 x2))))))
(assert (forall ((x34 x1)) (= (= (x33 x34) x2) (= x3 x34))))
(assert (forall ((x34 x1)) (forall ((x35 x1)) (= (and (= x34 x2) (= x2 x35)) (= (x30 x34 x35) x2)))))
(declare-fun x34 (x1 x8 x8) x7)
(assert (forall ((x35 x9)) (forall ((x36 x7)) (forall ((x37 x7)) (let ((x38 (x14 x35 x37))) (= x38 (x14 x35 (x34 x3 (x14 x35 x36) x38))))))))
(assert (forall ((x35 x9)) (forall ((x36 x7)) (forall ((x37 x7)) (let ((x38 (x14 x35 x36))) (= x38 (x14 x35 (x34 x2 x38 (x14 x35 x37)))))))))
(declare-fun x39 (Int Int) x1)
(declare-fun x40 (Int Int) x1)
(declare-fun x36 (Int Int) x1)
(declare-fun x37 (Int Int) x1)
(declare-fun x38 (Int Int) x1)
(declare-fun x35 (Int Int) x1)
(assert (forall ((x41 Int)) (forall ((x42 Int)) (= (< x42 x41) (= (x37 x41 x42) x2)))))
(assert (forall ((x41 Int)) (forall ((x42 Int)) (= (not (= x42 x41)) (= x2 (x40 x41 x42))))))
(assert (forall ((x41 Int)) (forall ((x42 Int)) (= (= x2 (x38 x41 x42)) (<= x42 x41)))))
(assert (forall ((x41 Int)) (forall ((x42 Int)) (= (= x2 (x39 x41 x42)) (= x41 x42)))))
(assert (forall ((x41 Int)) (forall ((x42 Int)) (= (= (x35 x41 x42) x2) (> x42 x41)))))
(assert (forall ((x41 Int)) (forall ((x42 Int)) (= (= x2 (x36 x41 x42)) (>= x42 x41)))))
(declare-fun x41 (Int) Int)
(assert (forall ((x42 Int)) (=> (<= x42 0) (= (x41 x42) (- x42)))))
(assert (forall ((x42 Int)) (=> (<= 0 x42) (= x42 (x41 x42)))))
(declare-fun x43 (Int Int) Int)
(declare-fun x42 (Int Int) Int)
(assert (forall ((x44 Int)) (forall ((x45 Int)) (let ((x46 (x43 x44 x45))) (and (>= x44 x46) (>= x45 x46))))))
(assert (forall ((x44 Int)) (forall ((x45 Int)) (let ((x46 (x42 x44 x45))) (and (>= x46 x45) (<= x44 x46))))))
(assert (forall ((x44 Int)) (forall ((x45 Int)) (let ((x46 (x42 x44 x45))) (or (= x46 x45) (= x44 x46))))))
(assert (forall ((x44 Int)) (forall ((x45 Int)) (let ((x46 (x43 x44 x45))) (or (= x45 x46) (= x46 x44))))))
(declare-fun x56 (Real) Int)
(declare-fun x59 (Real Real) x1)
(declare-fun x60 (Real Real) x1)
(declare-fun x62 (Real Real) x1)
(declare-fun x50 (Real Real) Real)
(declare-fun x49 (Real Real) Bool)
(declare-fun x46 (Real Real) Bool)
(declare-fun x58 (Real Real) x1)
(declare-fun x53 (Real Real) Real)
(declare-fun x51 (Real Real) Real)
(declare-fun x48 (Real Real) Bool)
(declare-fun x54 (Real) Real)
(declare-fun x45 (Real Real) Bool)
(declare-fun x44 (Real Real) Bool)
(declare-fun x55 (Int) Real)
(declare-fun x47 (Real Real) Bool)
(declare-fun x57 (Real Real) x1)
(declare-fun x52 (Real Real) Real)
(declare-fun x61 (Real Real) x1)
(assert (forall ((x63 Real)) (forall ((x64 Real)) (= (< x63 x64) (= (x57 x63 x64) x2)))))
(assert (forall ((x63 Real)) (forall ((x64 Real)) (= (= x2 (x62 x63 x64)) (not (= x63 x64))))))
(assert (forall ((x63 Real)) (forall ((x64 Real)) (= (= (x59 x63 x64) x2) (> x63 x64)))))
(assert (forall ((x63 Real)) (forall ((x64 Real)) (= (= x63 x64) (= (x61 x63 x64) x2)))))
(assert (forall ((x63 Real)) (forall ((x64 Real)) (= (= (x58 x63 x64) x2) (<= x63 x64)))))
(assert (forall ((x63 Real)) (forall ((x64 Real)) (= (= x2 (x60 x63 x64)) (<= x64 x63)))))
(declare-fun x63 (Real Real) Real)
(declare-fun x64 (Real Real) Real)
(assert (forall ((x65 Real)) (forall ((x66 Real)) (let ((x67 (x64 x65 x66))) (and (>= x66 x67) (>= x65 x67))))))
(assert (forall ((x65 Real)) (forall ((x66 Real)) (let ((x67 (x64 x65 x66))) (or (= x67 x65) (= x66 x67))))))
(assert (forall ((x65 Real)) (forall ((x66 Real)) (let ((x67 (x63 x65 x66))) (and (<= x66 x67) (<= x65 x67))))))
(assert (forall ((x65 Real)) (forall ((x66 Real)) (let ((x67 (x63 x65 x66))) (or (= x65 x67) (= x66 x67))))))
(declare-fun x65 (Real) Real)
(declare-fun x67 (Real) Real)
(declare-fun x66 (Real Real) Real)
(assert (forall ((x68 Real)) (=> (>= x68 0.0) (= (x67 x68) x68))))
(assert (forall ((x68 Real)) (=> (<= x68 0.0) (= (x67 x68) (- x68)))))
(declare-fun x68 (Real) Real)
(declare-fun x70 (Real) Real)
(declare-fun x69 (Real) Real)
(assert (forall ((x71 Real)) (= x71 (x69 (x68 x71)))))
(declare-fun x71 (Real) Real)
(declare-fun x83 (x9) x9)
(declare-fun x81 (Real Real) Real)
(declare-fun x87 (Int) x7)
(declare-fun x74 (Real) Real)
(declare-fun x84 (x9) x9)
(declare-fun x90 (x8 x8) Int)
(declare-fun x86 (x8) x7)
(declare-fun x75 (Real) Real)
(declare-fun x78 (Real) Real)
(declare-fun x88 (x8) Int)
(declare-fun x79 (Real) Real)
(declare-fun x80 (Real Real) Real)
(declare-fun x85 (x8) x7)
(declare-fun x73 (Real) Real)
(declare-fun x77 (Real) Real)
(declare-fun x72 (Real) Real)
(declare-fun x89 (x8 x8) Int)
(declare-fun x91 (x8 x8) Bool)
(declare-fun x82 (x9) x9)
(declare-fun x76 (Real) Real)
(assert (forall ((x92 x9)) (forall ((x93 x7)) (forall ((x94 x7)) (let ((x96 (x14 (x83 x92) x94)) (x95 (x14 (x82 x92) x93))) (= (x91 x95 x96) (and (>= 0 (x90 x95 x96)) (<= 0 (x89 x95 x96)))))))))
(declare-fun x92 (x8 x8) Bool)
(assert (forall ((x93 x9)) (forall ((x94 x7)) (forall ((x95 x7)) (let ((x96 (x83 x93))) (let ((x97 (x14 x96 x94)) (x98 (x14 x96 x95)) (x99 (x84 x93))) (= (x92 x97 x98) (= (x14 x99 (x85 x97)) (x14 x99 (x85 x98))))))))))
(declare-fun x94 (x8 Int) x7)
(declare-fun x95 () x7)
(declare-fun x93 (x8 x8) Int)
(assert (forall ((x96 x9)) (forall ((x97 x7)) (let ((x99 (x14 (x83 x96) x95)) (x98 (x14 (x82 x96) x97))) (and (>= (x90 x98 x99) 0) (>= (- 2) (x89 x98 x99)))))))
(assert (forall ((x96 x9)) (forall ((x97 x7)) (forall ((x98 Int)) (forall ((x99 Int)) (let ((x100 (x83 x96))) (let ((x101 (x14 x100 x97))) (= (> (x88 (x14 x100 (x94 x101 x99))) (x88 (x14 x100 (x94 x101 x98)))) (> x99 x98)))))))))
(assert (forall ((x96 x9)) (forall ((x97 x7)) (>= (x88 (x14 (x83 x96) x97)) 0))))
(assert (forall ((x96 x9)) (forall ((x97 x7)) (forall ((x98 Int)) (forall ((x99 Int)) (let ((x100 (x83 x96))) (let ((x101 (x14 x100 x97))) (= (<= x98 x99) (<= (x88 (x14 x100 (x94 x101 x98))) (x88 (x14 x100 (x94 x101 x99))))))))))))
(assert (forall ((x96 x9)) (forall ((x97 x7)) (forall ((x98 Int)) (forall ((x99 Int)) (let ((x100 (x83 x96))) (let ((x101 (x14 x100 x97))) (= (x14 x100 (x94 x101 (+ x98 x99))) (x14 x100 (x94 (x14 x100 (x94 x101 x98)) x99))))))))))
(assert (forall ((x96 x9)) (forall ((x97 x7)) (let ((x98 (x83 x96))) (let ((x99 (x14 x98 x97))) (= (x14 x98 (x94 x99 0)) x99))))))
(assert (forall ((x96 x9)) (= (x88 (x14 (x83 x96) x95)) 0)))
(assert (forall ((x96 x9)) (forall ((x97 x7)) (forall ((x98 x7)) (forall ((x99 Int)) (let ((x101 (x83 x96)) (x100 (x14 (x82 x96) x97))) (let ((x102 (x14 x101 x98))) (= (x90 x100 (x14 x101 (x94 x102 x99))) (- (x90 x100 x102) x99)))))))))
(assert (forall ((x96 x9)) (forall ((x97 x7)) (not (x91 (x14 (x82 x96) x97) (x14 (x83 x96) x95))))))
(assert (forall ((x96 x9)) (forall ((x97 x7)) (forall ((x98 x7)) (let ((x99 (x83 x96))) (let ((x101 (x14 x99 x98)) (x100 (x14 x99 x97))) (= (= x100 x101) (= (x88 x100) (x88 x101)))))))))
(assert (forall ((x96 x9)) (forall ((x97 x7)) (forall ((x98 Int)) (forall ((x99 Int)) (let ((x100 (x83 x96))) (let ((x101 (x14 x100 x97))) (=> (not (= x98 x99)) (not (= (x14 x100 (x94 x101 x98)) (x14 x100 (x94 x101 x99))))))))))))
(assert (forall ((x96 x9)) (forall ((x97 x7)) (forall ((x98 x7)) (forall ((x99 Int)) (let ((x101 (x83 x96)) (x100 (x14 (x82 x96) x97))) (let ((x102 (x14 x101 x98))) (= (- (x89 x100 x102) x99) (x89 x100 (x14 x101 (x94 x102 x99)))))))))))
(declare-fun x97 (x8 x8) x1)
(declare-fun x96 (x8 x8) x1)
(assert (forall ((x98 x9)) (forall ((x99 x7)) (forall ((x100 x7)) (let ((x101 (x83 x98))) (let ((x102 (x14 x101 x99)) (x103 (x14 x101 x100))) (=> (x92 x102 x103) (= (x14 x101 (x94 x103 (x93 x102 x103))) x102))))))))
(assert (forall ((x98 x9)) (forall ((x99 x7)) (forall ((x100 x7)) (let ((x101 (x83 x98))) (let ((x102 (x14 x101 x99)) (x103 (x14 x101 x100))) (= (not (= x102 x103)) (= (x97 x102 x103) x2))))))))
(assert (forall ((x98 x9)) (forall ((x99 x7)) (forall ((x100 x7)) (let ((x101 (x83 x98))) (let ((x103 (x14 x101 x100)) (x102 (x14 x101 x99))) (=> (x92 x102 x103) (=> (= (x93 x102 x103) 0) (= x102 x103)))))))))
(assert (forall ((x98 x9)) (forall ((x99 x7)) (forall ((x100 x7)) (forall ((x101 Int)) (let ((x102 (x83 x98))) (let ((x104 (x14 x102 x100)) (x103 (x14 x102 x99))) (=> (x92 x103 x104) (x92 x103 (x14 x102 (x94 x104 x101)))))))))))
(assert (forall ((x98 x9)) (forall ((x99 x7)) (forall ((x100 x7)) (forall ((x101 Int)) (let ((x102 (x83 x98))) (let ((x104 (x14 x102 x100)) (x103 (x14 x102 x99))) (= (x93 x103 (x14 x102 (x94 x104 x101))) (- (x93 x103 x104) x101)))))))))
(assert (forall ((x98 x9)) (forall ((x99 x7)) (forall ((x100 x7)) (let ((x101 (x83 x98))) (let ((x102 (x14 x101 x99)) (x103 (x14 x101 x100))) (= (= x103 x102) (= x2 (x96 x102 x103)))))))))
(assert (forall ((x98 x9)) (forall ((x99 x7)) (forall ((x100 x7)) (forall ((x101 Int)) (let ((x102 (x83 x98))) (let ((x104 (x14 x102 x100)) (x103 (x14 x102 x99))) (= (x93 (x14 x102 (x94 x103 x101)) x104) (+ (x93 x103 x104) x101)))))))))
(assert (forall ((x98 x9)) (forall ((x99 x7)) (forall ((x100 x7)) (forall ((x101 Int)) (let ((x102 (x83 x98))) (let ((x103 (x14 x102 x100)) (x104 (x14 x102 x99))) (=> (x92 x103 x104) (x92 (x14 x102 (x94 x103 x101)) x104)))))))))
(assert (forall ((x98 x9)) (forall ((x99 x7)) (let ((x100 (x14 (x83 x98) x99))) (= 0 (x93 x100 x100))))))
(declare-fun x98 (x9 x9) x9)
(declare-fun x100 (x8 x8 x8) x7)
(declare-fun x99 (x8 x8) x7)
(assert (forall ((x101 x9)) (forall ((x102 x9)) (forall ((x103 x7)) (forall ((x104 x7)) (forall ((x105 x7)) (forall ((x106 x7)) (let ((x107 (x83 x102))) (let ((x108 (x14 x107 x104)) (x111 (x14 x101 x106)) (x109 (x14 x107 x105)) (x110 (x98 x102 x101))) (=> (= x109 x108) (= (x14 x101 (x99 (x14 x110 (x100 (x14 x110 x103) x108 x111)) x109)) x111)))))))))))
(assert (forall ((x101 x9)) (forall ((x102 x9)) (forall ((x103 x7)) (forall ((x104 x7)) (forall ((x105 x7)) (forall ((x106 x7)) (let ((x107 (x83 x102))) (let ((x109 (x14 x107 x105)) (x110 (x98 x102 x101)) (x108 (x14 x107 x104))) (let ((x111 (x14 x110 x103))) (=> (not (= x108 x109)) (= (x14 x101 (x99 (x14 x110 (x100 x111 x108 (x14 x101 x106))) x109)) (x14 x101 (x99 x111 x109))))))))))))))
(declare-fun x107 (x8 Int Int) x7)
(declare-fun x110 (x8 x8) Bool)
(declare-fun x101 (x9) x9)
(declare-fun x111 (x8 x8) Bool)
(declare-fun x106 (x8) x7)
(declare-fun x103 (x8) x7)
(declare-fun x112 (x8 x8) Bool)
(declare-fun x109 (x8 Int) x7)
(declare-fun x108 (x8 Int) x7)
(declare-fun x102 () x7)
(declare-fun x104 (x8 x8) x7)
(declare-fun x105 (x8 x8) x7)
(assert (forall ((x113 x9)) (forall ((x114 x7)) (forall ((x115 x7)) (let ((x116 (x101 x113))) (= (x112 (x14 x116 x114) (x14 x116 x115)) (forall ((x117 x7)) (let ((x118 (x14 (x83 x113) x117))) (not (and (x110 x118 (x14 x116 x115)) (x110 x118 (x14 x116 x114))))))))))))
(declare-fun x113 (x8 x8) Bool)
(assert (forall ((x114 x9)) (forall ((x115 x7)) (let ((x116 (x14 (x101 x114) x115))) (x113 x116 x116)))))
(assert (forall ((x114 x9)) (forall ((x115 x7)) (forall ((x116 x7)) (forall ((x117 Int)) (forall ((x118 Int)) (let ((x119 (x101 x114))) (= (exists ((x120 Int)) (exists ((x121 x7)) (let ((x122 (x83 x114))) (let ((x123 (x14 x122 x121))) (and (and (<= x120 x118) (and (= (x14 x122 (x94 x123 x120)) (x14 x122 x115)) (x110 x123 (x14 x119 x116)))) (>= x120 x117)))))) (x110 (x14 (x83 x114) x115) (x14 x119 (x107 (x14 x119 x116) x117 x118)))))))))))
(assert (forall ((x114 x9)) (forall ((x115 x7)) (forall ((x116 x7)) (let ((x117 (x14 (x82 x114) x115)) (x118 (x14 (x83 x114) x116))) (= (x91 x117 x118) (x111 x117 (x14 (x101 x114) (x103 x118)))))))))
(assert (forall ((x114 x9)) (forall ((x115 x9)) (forall ((x116 x7)) (forall ((x117 x7)) (forall ((x118 x7)) (= (forall ((x119 x7)) (forall ((x120 x7)) (let ((x122 (x14 (x83 x114) x119)) (x121 (x83 x115))) (let ((x123 (x14 x121 x120))) (=> (and (= x123 (x14 x121 (x99 (x14 (x98 x114 x121) x117) x122))) (x110 x122 (x14 (x101 x114) x118))) (x91 (x14 (x82 x115) x116) x123)))))) (x111 (x14 (x82 x115) x116) (x14 (x101 x115) (x104 (x14 (x98 x114 (x83 x115)) x117) (x14 (x101 x114) x118)))))))))))
(assert (forall ((x114 x9)) (forall ((x115 x7)) (not (x110 (x14 (x83 x114) x115) (x14 (x101 x114) x102))))))
(assert (forall ((x114 x9)) (forall ((x115 x9)) (forall ((x116 x7)) (forall ((x117 x7)) (forall ((x118 x7)) (let ((x119 (x83 x115))) (= (x110 (x14 x119 x116) (x14 (x101 x115) (x104 (x14 (x98 x114 x119) x117) (x14 (x101 x114) x118)))) (exists ((x120 x7)) (let ((x121 (x14 (x83 x114) x120))) (and (= (x14 x119 x116) (x14 x119 (x99 (x14 (x98 x114 x119) x117) x121))) (x110 x121 (x14 (x101 x114) x118)))))))))))))
(assert (forall ((x114 x9)) (forall ((x115 x7)) (forall ((x116 x7)) (forall ((x117 Int)) (forall ((x118 Int)) (let ((x119 (x101 x114))) (= (forall ((x120 Int)) (forall ((x121 x7)) (let ((x122 (x83 x114))) (let ((x123 (x14 x122 x121))) (=> (and (x110 x123 (x14 x119 x116)) (and (<= x120 x118) (>= x120 x117))) (x91 (x14 (x82 x114) x115) (x14 x122 (x94 x123 x120)))))))) (x111 (x14 (x82 x114) x115) (x14 x119 (x107 (x14 x119 x116) x117 x118)))))))))))
(assert (forall ((x114 x9)) (forall ((x115 x7)) (forall ((x116 x7)) (let ((x117 (x83 x114))) (let ((x119 (x14 x117 x116)) (x118 (x14 x117 x115))) (= (x110 x118 (x14 (x101 x114) (x103 x119))) (= x118 x119))))))))
(assert (forall ((x114 x9)) (forall ((x115 x7)) (forall ((x116 x7)) (let ((x117 (x101 x114))) (= (x110 (x14 (x83 x114) x115) (x14 x117 (x106 (x14 x117 x116)))) (exists ((x118 Int)) (exists ((x119 x7)) (let ((x120 (x83 x114))) (let ((x121 (x14 x120 x119))) (and (= (x14 x120 (x94 x121 x118)) (x14 x120 x115)) (x110 x121 (x14 x117 x116)))))))))))))
(assert (forall ((x114 x9)) (forall ((x115 x7)) (forall ((x116 x7)) (forall ((x117 x7)) (let ((x119 (x101 x114)) (x118 (x14 (x82 x114) x115))) (let ((x121 (x14 x119 x117)) (x120 (x14 x119 x116))) (= (and (x111 x118 x121) (x111 x118 x120)) (x111 x118 (x14 x119 (x105 x120 x121)))))))))))
(assert (forall ((x114 x9)) (forall ((x115 x7)) (x111 (x14 (x82 x114) x115) (x14 (x101 x114) x102)))))
(assert (forall ((x114 x9)) (forall ((x115 x7)) (forall ((x116 Int)) (forall ((x117 Int)) (forall ((x118 Int)) (forall ((x119 Int)) (let ((x120 (x101 x114))) (let ((x121 (x14 x120 x115))) (=> (and (<= x118 x116) (<= x117 x119)) (x113 (x14 x120 (x107 x121 x116 x117)) (x14 x120 (x107 x121 x118 x119)))))))))))))
(assert (forall ((x114 x9)) (forall ((x115 x7)) (forall ((x116 x7)) (forall ((x117 Int)) (let ((x118 (x101 x114))) (= (x110 (x14 (x83 x114) x115) (x14 x118 (x109 (x14 x118 x116) x117))) (exists ((x119 Int)) (exists ((x120 x7)) (let ((x121 (x83 x114))) (let ((x122 (x14 x121 x120))) (and (>= x119 x117) (and (= (x14 x121 x115) (x14 x121 (x94 x122 x119))) (x110 x122 (x14 x118 x116)))))))))))))))
(assert (forall ((x114 x9)) (forall ((x115 x7)) (forall ((x116 x7)) (let ((x117 (x101 x114))) (= (x113 (x14 x117 x115) (x14 x117 x116)) (forall ((x118 x7)) (let ((x119 (x14 (x83 x114) x118))) (=> (x110 x119 (x14 x117 x115)) (x110 x119 (x14 x117 x116)))))))))))
(assert (forall ((x114 x9)) (forall ((x115 x7)) (forall ((x116 Int)) (forall ((x117 Int)) (forall ((x118 Int)) (forall ((x119 Int)) (let ((x120 (x101 x114))) (let ((x121 (x14 x120 x115))) (x113 (x14 x120 (x107 x121 x116 x117)) (x14 x120 (x106 x121))))))))))))
(assert (forall ((x114 x9)) (forall ((x115 x7)) (forall ((x116 x7)) (forall ((x117 x7)) (let ((x119 (x101 x114)) (x118 (x14 (x83 x114) x115))) (let ((x120 (x14 x119 x116)) (x121 (x14 x119 x117))) (= (or (x110 x118 x120) (x110 x118 x121)) (x110 x118 (x14 x119 (x105 x120 x121)))))))))))
(assert (forall ((x114 x9)) (forall ((x115 x7)) (forall ((x116 x7)) (forall ((x117 Int)) (let ((x118 (x101 x114))) (= (x110 (x14 (x83 x114) x115) (x14 x118 (x108 (x14 x118 x116) x117))) (exists ((x119 Int)) (exists ((x120 x7)) (let ((x121 (x83 x114))) (let ((x122 (x14 x121 x120))) (and (<= x119 x117) (and (= (x14 x121 x115) (x14 x121 (x94 x122 x119))) (x110 x122 (x14 x118 x116)))))))))))))))
(declare-fun x114 (x8 x8 x8 x8) Bool)
(assert (forall ((x115 x9)) (forall ((x116 x9)) (forall ((x117 x7)) (forall ((x118 x7)) (forall ((x119 x7)) (forall ((x120 x7)) (let ((x121 (x98 x116 x115))) (= (forall ((x122 x7)) (let ((x123 (x14 (x83 x116) x122))) (=> (and (x91 (x14 (x82 x116) x117) x123) (not (x110 x123 (x14 (x101 x116) x120)))) (= (x14 x115 (x99 (x14 x121 x119) x123)) (x14 x115 (x99 (x14 x121 x118) x123)))))) (x114 (x14 (x82 x116) x117) (x14 x121 x118) (x14 x121 x119) (x14 (x101 x116) x120)))))))))))
(assert (forall ((x115 x9)) (forall ((x116 x9)) (forall ((x117 x7)) (forall ((x118 x7)) (forall ((x119 x7)) (let ((x120 (x14 (x98 x116 x115) x118))) (x114 (x14 (x82 x116) x117) x120 x120 (x14 (x101 x116) x119)))))))))
(assert (forall ((x115 x9)) (forall ((x116 x9)) (forall ((x117 x7)) (forall ((x118 x7)) (forall ((x119 x7)) (forall ((x120 x7)) (forall ((x121 x7)) (let ((x122 (x14 (x82 x116) x117)) (x123 (x98 x116 x115))) (let ((x124 (x14 x123 x118)) (x125 (x14 x123 x119)) (x126 (x14 (x101 x116) x121)) (x127 (x14 x123 x120))) (=> (x114 x122 x124 x125 x126) (=> (x114 x122 x125 x127 x126) (x114 x122 x124 x127 x126)))))))))))))
(declare-fun x115 (x8 x8) Bool)
(assert (forall ((x116 x9)) (forall ((x117 x7)) (forall ((x118 x7)) (forall ((x119 Int)) (let ((x120 (x83 x116))) (let ((x121 (x14 x120 x118)) (x122 (x14 x120 x117))) (=> (x115 x121 x122) (x115 (x14 x120 (x94 x121 x119)) x122)))))))))
(assert (forall ((x116 x9)) (forall ((x117 x7)) (forall ((x118 x7)) (forall ((x119 Int)) (let ((x120 (x83 x116))) (let ((x121 (x14 x120 x118)) (x122 (x14 x120 x117))) (=> (x115 x121 x122) (x115 x122 (x14 x120 (x94 x121 x119)))))))))))
(assert (forall ((x116 x9)) (forall ((x117 x7)) (forall ((x118 x7)) (forall ((x119 Int)) (let ((x120 (x83 x116))) (let ((x121 (x14 x120 x117)) (x122 (x14 x120 x118))) (=> (x115 x121 x122) (x115 x121 (x14 x120 (x94 x122 x119)))))))))))
(assert (forall ((x116 x9)) (forall ((x117 x7)) (forall ((x118 x7)) (forall ((x119 Int)) (let ((x120 (x83 x116))) (let ((x122 (x14 x120 x118)) (x121 (x14 x120 x117))) (=> (x115 x121 x122) (x115 (x14 x120 (x94 x122 x119)) x121)))))))))
(declare-fun x117 (x9) x9)
(declare-fun x121 (x8 x8) Bool)
(declare-fun x120 (x8 x8) Bool)
(declare-fun x116 (x9) x9)
(declare-fun x122 (x8 x8) x1)
(declare-fun x118 (x8) Int)
(declare-fun x119 (x8 x8) x7)
(assert (forall ((x123 x9)) (forall ((x124 x7)) (let ((x125 (x14 (x117 x123) x124))) (x121 x125 x125)))))
(assert (forall ((x123 x9)) (forall ((x124 x7)) (forall ((x125 x7)) (forall ((x126 x7)) (let ((x127 (x117 x123))) (let ((x130 (x14 x127 x126)) (x128 (x14 x127 x124)) (x129 (x14 x127 x125))) (=> (x121 x128 x129) (=> (x120 x129 x130) (x121 x128 x130))))))))))
(assert (forall ((x123 x9)) (forall ((x124 x7)) (forall ((x125 x7)) (let ((x126 (x117 x123))) (let ((x128 (x14 x126 x125)) (x127 (x14 x126 x124))) (= (= x2 (x122 x127 x128)) (x121 x127 x128))))))))
(declare-fun x123 (x8 x8 x8) Bool)
(assert (forall ((x124 x9)) (forall ((x125 x7)) (forall ((x126 x7)) (forall ((x127 x7)) (let ((x130 (x117 x124)) (x129 (x14 (x83 x124) x126)) (x128 (x14 (x116 x124) x125))) (let ((x131 (x14 x130 x127))) (= (x123 x128 x129 x131) (x121 (x14 x130 (x119 x128 x129)) x131)))))))))
(declare-fun x124 (x8 x8 x8) x7)
(assert (forall ((x125 x9)) (forall ((x126 x7)) (forall ((x127 x7)) (forall ((x128 x7)) (let ((x130 (x83 x125)) (x129 (x14 (x116 x125) x126))) (let ((x132 (x14 (x117 x125) x128)) (x131 (x14 x130 x127))) (=> (x123 x129 x131 x132) (= x131 (x14 x130 (x124 x129 x131 x132)))))))))))
(declare-fun x125 () x7)
(assert (forall ((x126 x9)) (forall ((x127 x7)) (let ((x128 (x117 x126))) (x121 (x14 x128 x127) (x14 x128 x125))))))
(declare-fun x126 (x8) Bool)
(assert (forall ((x127 x9)) (forall ((x128 x7)) (forall ((x129 x7)) (forall ((x130 x7)) (let ((x131 (x117 x127))) (let ((x133 (x14 x131 x129)) (x134 (x14 x131 x130)) (x132 (x14 x131 x128))) (=> (x126 x132) (=> (x126 x133) (=> (not (= x133 x132)) (=> (x121 x134 x132) (not (x121 x134 x133)))))))))))))
(assert (forall ((x127 x9)) (forall ((x128 x7)) (let ((x129 (x117 x127))) (let ((x130 (x14 x129 x128))) (= (x120 x130 (x14 x129 x125)) (x126 x130)))))))
(declare-fun x127 (x8 x8 x8) Bool)
(assert (forall ((x128 x9)) (forall ((x129 x7)) (forall ((x130 x7)) (forall ((x131 x7)) (let ((x133 (x117 x128)) (x132 (x14 (x116 x128) x129))) (let ((x134 (x14 (x98 x128 x133) x130)) (x135 (x14 (x83 x128) x131))) (= (= (x14 x133 (x119 x132 x135)) (x14 x133 (x99 x134 x135))) (x127 x132 x134 x135)))))))))
(declare-fun x129 (Int Int) Int)
(declare-fun x128 (Int) Int)
(assert (forall ((x130 Int)) (forall ((x131 Int)) (=> (not (= (x129 x130 x131) 0)) (and (not (= 0 x130)) (not (= x131 0)))))))
(declare-fun x131 (Int Int) Int)
(declare-fun x132 (Int Int) Int)
(declare-fun x130 (Int Int) Int)
(assert (forall ((x133 Int)) (forall ((x134 Int)) (forall ((x135 Int)) (=> (and (and (<= 0 x135) (>= x134 x133)) (>= x133 0)) (<= (x132 x133 x135) (x132 x134 x135)))))))
(assert (forall ((x133 Int)) (forall ((x134 Int)) (=> (and (<= 0 x133) (>= x134 0)) (<= 0 (x132 x133 x134))))))
(declare-fun x133 (Int Int) Int)
(assert (forall ((x134 Int)) (forall ((x135 Int)) (=> (and (<= 0 x134) (<= 0 x135)) (>= (x133 x134 x135) 0)))))
(assert (forall ((x134 Int)) (forall ((x135 Int)) (=> (and (<= 0 x134) (>= x135 0)) (>= x134 (x133 x134 x135))))))
(declare-fun x134 (Int Int) Int)
(assert (forall ((x135 Int)) (forall ((x136 Int)) (=> (and (>= x135 0) (<= 0 x136)) (= x135 (x133 (x132 x135 x136) x136))))))
(assert (forall ((x135 Int)) (forall ((x136 Int)) (=> (and (<= 0 x136) (>= x135 0)) (>= x135 (x132 (x133 x135 x136) x136))))))
(assert (forall ((x135 Int)) (forall ((x136 Int)) (=> (and (<= 0 x136) (>= x135 0)) (>= x135 (x134 x135 x136))))))
(assert (forall ((x135 Int)) (forall ((x136 Int)) (=> (and (>= x135 0) (>= x136 0)) (= (x133 x135 x136) (x134 x135 x136))))))
(assert (forall ((x135 Int)) (forall ((x136 Int)) (=> (and (<= 0 x136) (>= x135 0)) (<= 0 (x134 x135 x136))))))
(declare-fun x135 (x8 x8) Bool)
(declare-fun x136 (x8 x8 Int) Bool)
(assert (forall ((x137 x9)) (forall ((x138 x9)) (forall ((x139 x7)) (forall ((x140 x7)) (forall ((x141 x7)) (forall ((x142 x7)) (forall ((x143 x7)) (forall ((x144 x7)) (forall ((x145 Int)) (let ((x146 (x82 x138))) (let ((x149 (x14 (x83 x138) x144)) (x150 (x98 x138 x137)) (x147 (x14 x146 x139)) (x148 (x14 x146 x140))) (let ((x152 (x14 x150 x142)) (x153 (x101 x138)) (x151 (x14 x150 x141))) (let ((x154 (x14 x153 x143))) (=> (and (and (x136 x147 x149 x145) (and (x113 x154 (x14 x153 (x106 (x14 x153 (x103 x149))))) (x114 x148 x151 x152 x154))) (x135 x147 x148)) (x114 x147 x151 x152 (x14 x153 x102)))))))))))))))))
(assert (forall ((x137 x9)) (forall ((x138 x7)) (forall ((x139 x7)) (forall ((x140 Int)) (= (x136 (x14 (x82 x137) x138) (x14 (x83 x137) x139) x140) (forall ((x141 Int)) (let ((x142 (x83 x137))) (=> (and (> x140 x141) (<= 0 x141)) (not (x91 (x14 (x82 x137) x138) (x14 x142 (x94 (x14 x142 x139) x141)))))))))))))
(assert (forall ((x137 x9)) (forall ((x138 x7)) (forall ((x139 x7)) (let ((x140 (x82 x137))) (=> (x135 (x14 x140 x138) (x14 x140 x139)) (forall ((x141 x7)) (let ((x143 (x14 (x83 x137) x141)) (x142 (x14 x140 x138))) (=> (x91 x142 x143) (= (x90 (x14 x140 x139) x143) (x90 x142 x143)))))))))))
(assert (forall ((x137 x9)) (forall ((x138 x7)) (forall ((x139 x7)) (let ((x140 (x82 x137))) (=> (x135 (x14 x140 x138) (x14 x140 x139)) (forall ((x141 x7)) (let ((x142 (x14 x140 x138)) (x143 (x14 (x83 x137) x141))) (=> (x91 x142 x143) (= (x89 (x14 x140 x139) x143) (x89 x142 x143)))))))))))
(declare-fun x137 (x8 x8 x8) Bool)
(assert (forall ((x138 x9)) (forall ((x139 x7)) (forall ((x140 x7)) (forall ((x141 x7)) (let ((x142 (x82 x138))) (=> (x137 (x14 x142 x139) (x14 x142 x140) (x14 (x101 x138) x141)) (forall ((x143 x7)) (let ((x144 (x14 x142 x139)) (x145 (x14 (x83 x138) x143))) (=> (and (not (x110 x145 (x14 (x101 x138) x141))) (x91 x144 x145)) (= (x89 x144 x145) (x89 (x14 x142 x140) x145))))))))))))
(assert (forall ((x138 x9)) (forall ((x139 x7)) (forall ((x140 x7)) (forall ((x141 x7)) (let ((x142 (x82 x138))) (=> (x137 (x14 x142 x139) (x14 x142 x140) (x14 (x101 x138) x141)) (forall ((x143 x7)) (let ((x144 (x14 x142 x139)) (x145 (x14 (x83 x138) x143))) (=> (and (not (x110 x145 (x14 (x101 x138) x141))) (x91 x144 x145)) (= (x90 x144 x145) (x90 (x14 x142 x140) x145))))))))))))
(declare-fun x138 () x9)
(declare-fun x141 (x8 x8 Int) Int)
(declare-fun x139 (x8 x8) x7)
(declare-fun x140 (x8 x8 Int) Int)
(assert (forall ((x142 x9)) (forall ((x143 x7)) (forall ((x144 x7)) (forall ((x145 Int)) (let ((x147 (x14 (x83 x142) x144)) (x146 (x14 (x82 x142) x143))) (let ((x149 (+ x145 (* x145 (x141 x146 x147 x145)))) (x148 (x89 x146 x147))) (=> (< 0 x145) (and (> (- (+ x149 x145) 1) x148) (>= x148 (- x149 1)))))))))))
(assert (forall ((x142 x9)) (forall ((x143 x7)) (forall ((x144 x7)) (forall ((x145 Int)) (let ((x146 (x14 (x82 x142) x143)) (x147 (x14 (x83 x142) x144))) (let ((x149 (x90 x146 x147)) (x148 (* x145 (x140 x146 x147 x145)))) (=> (> x145 0) (and (< (- x148 x145) x149) (<= x149 x148))))))))))
(declare-fun x143 (x8 Int Int x8) x7)
(declare-fun x142 (x8 Int Int) x7)
(assert (forall ((x144 Int)) (forall ((x145 Int)) (forall ((x146 Int)) (forall ((x147 Int)) (forall ((x148 x7)) (forall ((x149 x7)) (forall ((x150 x7)) (let ((x151 (x14 x138 x148)) (x152 (x14 x138 x149)) (x153 (x14 x138 x150))) (=> (= (+ x144 x145) x146) (= (x14 x138 (x143 x151 x144 (+ x145 x147) (x14 x138 (x139 x152 x153)))) (x14 x138 (x143 (x14 x138 (x143 x151 x144 x145 x152)) x146 x147 x153)))))))))))))
(assert (forall ((x144 Int)) (forall ((x145 Int)) (forall ((x146 Int)) (forall ((x147 Int)) (forall ((x148 x7)) (forall ((x149 x7)) (let ((x150 (x14 x138 x148))) (=> (or (<= (+ x146 x147) x144) (<= (+ x144 x147) x146)) (= (x14 x138 (x142 (x14 x138 (x143 x150 x144 x145 (x14 x138 x149))) x146 x147)) (x14 x138 (x142 x150 x146 x147))))))))))))
(assert (forall ((x144 Int)) (forall ((x145 Int)) (forall ((x146 Int)) (forall ((x147 Int)) (forall ((x148 x7)) (let ((x149 (x14 x138 x148))) (=> (= (+ x145 x144) x146) (= (x14 x138 (x142 x149 x144 (+ x147 x145))) (x14 x138 (x139 (x14 x138 (x142 x149 x144 x145)) (x14 x138 (x142 x149 x146 x147)))))))))))))
(assert (forall ((x144 Int)) (forall ((x145 Int)) (forall ((x146 Int)) (forall ((x147 Int)) (forall ((x148 x7)) (forall ((x149 x7)) (let ((x150 (x14 x138 x149))) (=> (and (= x146 x144) (= x147 x145)) (= x150 (x14 x138 (x142 (x14 x138 (x143 (x14 x138 x148) x144 x145 x150)) x146 x147))))))))))))
(assert (forall ((x144 Int)) (forall ((x145 Int)) (forall ((x146 Int)) (forall ((x147 Int)) (forall ((x148 x7)) (forall ((x149 x7)) (forall ((x150 x7)) (let ((x152 (x14 x138 x149)) (x153 (x14 x138 x150)) (x151 (x14 x138 x148))) (=> (= (+ x146 x147) x144) (= (x14 x138 (x143 (x14 x138 (x143 x151 x144 x145 x152)) x146 x147 x153)) (x14 x138 (x143 x151 x146 (+ x147 x145) (x14 x138 (x139 x153 x152)))))))))))))))
(declare-fun x144 (x8 x8 Int Int) x7)
(declare-fun x145 (x8 x8 Int Int x8) x7)
(assert (forall ((x146 x9)) (forall ((x147 x7)) (forall ((x148 x7)) (forall ((x149 x7)) (forall ((x150 Int)) (forall ((x151 Int)) (forall ((x152 Int)) (forall ((x153 Int)) (forall ((x154 x7)) (let ((x155 (x83 x146))) (let ((x157 (x14 x155 x149)) (x156 (x14 x155 x148)) (x158 (x98 x146 x138)) (x159 (x14 x138 x154))) (=> (and (and (= x151 x153) (= x152 x150)) (= x157 x156)) (= x159 (x14 x138 (x144 (x14 x158 (x145 (x14 x158 x147) x156 x150 x151 x159)) x157 x152 x153))))))))))))))))
(assert (forall ((x146 x9)) (forall ((x147 x7)) (forall ((x148 x7)) (forall ((x149 x7)) (forall ((x150 Int)) (forall ((x151 Int)) (forall ((x152 Int)) (forall ((x153 Int)) (forall ((x154 x7)) (let ((x156 (x83 x146)) (x155 (x101 x146))) (let ((x158 (x14 x156 x149)) (x157 (x14 x156 x148)) (x159 (x98 x146 x138))) (let ((x160 (x14 x159 x147))) (=> (x112 (x14 x155 (x107 (x14 x155 (x103 x157)) x150 (+ x150 x151))) (x14 x155 (x107 (x14 x155 (x103 x158)) x152 (+ x153 x152)))) (= (x14 x138 (x144 x160 x158 x152 x153)) (x14 x138 (x144 (x14 x159 (x145 x160 x157 x150 x151 (x14 x138 x154))) x158 x152 x153)))))))))))))))))
(assert (forall ((x146 x9)) (forall ((x147 x7)) (forall ((x148 x7)) (forall ((x149 Int)) (forall ((x150 Int)) (forall ((x151 Int)) (forall ((x152 Int)) (forall ((x153 x7)) (forall ((x154 x7)) (let ((x155 (x98 x146 x138))) (let ((x157 (x14 (x83 x146) x148)) (x156 (x14 x155 x147)) (x159 (x14 x138 x154)) (x158 (x14 x138 x153))) (=> (= x149 (+ x152 x151)) (= (x14 x155 (x145 (x14 x155 (x145 x156 x157 x149 x150 x158)) x157 x151 x152 x159)) (x14 x155 (x145 x156 x157 x151 (+ x152 x150) (x14 x138 (x139 x159 x158))))))))))))))))))
(assert (forall ((x146 x9)) (forall ((x147 x7)) (forall ((x148 x7)) (forall ((x149 Int)) (forall ((x150 Int)) (forall ((x151 Int)) (forall ((x152 x7)) (let ((x153 (x14 (x98 x146 x138) x147)) (x154 (x83 x146))) (let ((x155 (x14 x154 x148))) (= (x14 x138 (x144 x153 x155 (+ x149 x150) x151)) (x14 x138 (x144 x153 (x14 x154 (x94 x155 x149)) x150 x151)))))))))))))
(assert (forall ((x146 x9)) (forall ((x147 x7)) (forall ((x148 x7)) (forall ((x149 Int)) (forall ((x150 Int)) (forall ((x151 Int)) (forall ((x152 Int)) (let ((x153 (x14 (x98 x146 x138) x147)) (x154 (x14 (x83 x146) x148))) (=> (= x151 (+ x150 x149)) (= (x14 x138 (x139 (x14 x138 (x144 x153 x154 x149 x150)) (x14 x138 (x144 x153 x154 x151 x152)))) (x14 x138 (x144 x153 x154 x149 (+ x150 x152))))))))))))))
(assert (forall ((x146 x9)) (forall ((x147 x7)) (forall ((x148 x7)) (forall ((x149 Int)) (forall ((x150 Int)) (forall ((x151 Int)) (forall ((x152 Int)) (forall ((x153 x7)) (forall ((x154 x7)) (let ((x155 (x98 x146 x138))) (let ((x157 (x14 (x83 x146) x148)) (x156 (x14 x155 x147)) (x159 (x14 x138 x154)) (x158 (x14 x138 x153))) (=> (= x151 (+ x150 x149)) (= (x14 x155 (x145 x156 x157 x149 (+ x152 x150) (x14 x138 (x139 x158 x159)))) (x14 x155 (x145 (x14 x155 (x145 x156 x157 x149 x150 x158)) x157 x151 x152 x159))))))))))))))))
(assert (forall ((x146 x9)) (forall ((x147 x7)) (forall ((x148 x7)) (forall ((x149 Int)) (forall ((x150 Int)) (forall ((x151 Int)) (forall ((x152 x7)) (let ((x153 (x98 x146 x138))) (let ((x154 (x14 x153 x147)) (x155 (x83 x146))) (let ((x156 (x14 x155 x148)) (x157 (x14 x138 x152))) (= (x14 x153 (x145 x154 (x14 x155 (x94 x156 x149)) x150 x151 x157)) (x14 x153 (x145 x154 x156 (+ x150 x149) x151 x157))))))))))))))
(declare-fun x153 (x8) x7)
(declare-fun x148 () x9)
(declare-fun x152 (x8) x7)
(declare-fun x150 () x9)
(declare-fun x151 () x9)
(declare-fun x146 () x9)
(declare-fun x149 () x9)
(declare-fun x147 () x9)
(assert (forall ((x154 x7)) (let ((x155 (x14 x138 x154))) (= x155 (x14 x138 (x152 (x14 (x83 x146) (x153 x155))))))))
(declare-fun x154 (x8) x7)
(declare-fun x155 (x8) x7)
(assert (forall ((x156 x7)) (let ((x157 (x14 x138 x156))) (= (x14 x138 (x154 (x14 x147 (x155 x157)))) x157))))
(declare-fun x156 (x8) x7)
(declare-fun x157 (x8) x7)
(assert (forall ((x158 x7)) (let ((x159 (x14 x138 x158))) (= x159 (x14 x138 (x156 (x14 x148 (x157 x159))))))))
(declare-fun x158 (x8) x7)
(declare-fun x159 (x8) x7)
(assert (forall ((x160 x7)) (let ((x161 (x14 x138 x160))) (= (x14 x138 (x158 (x14 (x83 x149) (x159 x161)))) x161))))
(declare-fun x161 (x8) x7)
(declare-fun x160 (x8) x7)
(assert (forall ((x162 x7)) (let ((x163 (x14 x138 x162))) (= (x14 x138 (x160 (x14 (x83 x151) (x161 x163)))) x163))))
(declare-fun x162 () x7)
(assert (forall ((x163 x7)) (let ((x164 (x83 x146))) (let ((x165 (x14 x164 x163))) (= x165 (x14 x164 (x153 (x14 x138 (x152 x165)))))))))
(assert (= (x118 (x14 (x117 x146) x162)) 1))
(declare-fun x163 (x8) x7)
(assert (forall ((x164 x7)) (let ((x165 (x83 x146))) (let ((x166 (x14 x165 x164))) (= x166 (x14 x165 (x163 (x14 (x83 x13) (x86 x166)))))))))
(assert (let ((x164 (x117 x146))) (x120 (x14 x164 x162) (x14 x164 x125))))
(assert (forall ((x164 x7)) (forall ((x165 x7)) (x123 (x14 (x116 x146) x165) (x14 (x83 x146) x164) (x14 (x117 x146) x162)))))
(declare-fun x164 (x8) Int)
(declare-fun x165 (x8 x8) Bool)
(assert (forall ((x166 x7)) (forall ((x167 x7)) (let ((x169 (x14 x147 x167)) (x168 (x14 x147 x166))) (= (x165 x168 x169) (= (x164 x168) (x164 x169)))))))
(declare-fun x166 (x8) Int)
(declare-fun x167 (x8 x8) Bool)
(assert (forall ((x168 x7)) (forall ((x169 x7)) (let ((x171 (x14 x148 x169)) (x170 (x14 x148 x168))) (= (x167 x170 x171) (= (x166 x171) (x166 x170)))))))
(declare-fun x168 (Int) x7)
(assert (forall ((x169 Int)) (=> (and (<= (- 2147483648) x169) (>= 2147483647 x169)) (= (x164 (x14 x147 (x168 x169))) x169))))
(assert (forall ((x169 x7)) (let ((x170 (x164 (x14 x147 x169)))) (and (<= x170 2147483647) (<= (- 2147483648) x170)))))
(assert (forall ((x169 x7)) (let ((x170 (x14 x147 x169))) (x165 (x14 x147 (x155 (x14 x138 (x154 x170)))) x170))))
(declare-fun x169 (Int) x7)
(assert (forall ((x170 x7)) (let ((x171 (x14 x148 x170))) (x167 (x14 x148 (x157 (x14 x138 (x156 x171)))) x171))))
(assert (forall ((x170 Int)) (=> (and (>= x170 (- 128)) (<= x170 127)) (= x170 (x166 (x14 x148 (x169 x170)))))))
(assert (forall ((x170 x7)) (let ((x171 (x166 (x14 x148 x170)))) (and (>= x171 (- 128)) (>= 127 x171)))))
(declare-fun x170 () x7)
(assert (forall ((x171 x7)) (let ((x172 (x83 x149))) (let ((x173 (x14 x172 x171))) (= (x14 x172 (x159 (x14 x138 (x158 x173)))) x173)))))
(assert (= 1 (x118 (x14 (x117 x149) x170))))
(declare-fun x171 (x8) x7)
(assert (let ((x172 (x117 x149))) (x120 (x14 x172 x170) (x14 x172 x125))))
(assert (forall ((x172 x7)) (let ((x173 (x83 x149))) (let ((x174 (x14 x173 x172))) (= (x14 x173 (x171 (x14 (x83 x13) (x86 x174)))) x174)))))
(assert (forall ((x172 x7)) (forall ((x173 x7)) (x123 (x14 (x116 x149) x173) (x14 (x83 x149) x172) (x14 (x117 x149) x170)))))
(declare-fun x172 (x8 Int x8) Bool)
(assert (forall ((x173 x7)) (forall ((x174 Int)) (forall ((x175 x7)) (let ((x177 (x14 (x82 x146) x175)) (x176 (x14 (x83 x146) x173))) (= (x172 x176 x174 x177) (>= x174 (x90 x177 x176))))))))
(declare-fun x173 (x8 Int x8) Bool)
(assert (forall ((x174 x7)) (forall ((x175 Int)) (forall ((x176 x7)) (let ((x178 (x14 (x82 x149) x176)) (x177 (x14 (x83 x149) x174))) (= (>= x175 (x90 x178 x177)) (x173 x177 x175 x178)))))))
(declare-fun x174 (x8 Int x8) Bool)
(assert (forall ((x175 x7)) (forall ((x176 Int)) (forall ((x177 x7)) (let ((x179 (x14 (x82 x151) x177)) (x178 (x14 (x83 x151) x175))) (= (>= x176 (x90 x179 x178)) (x174 x178 x176 x179)))))))
(assert (forall ((x175 x7)) (let ((x176 (x83 x13))) (let ((x177 (x14 x176 x175))) (= x177 (x14 x176 (x86 (x14 (x83 x149) (x171 x177)))))))))
(assert (forall ((x175 x7)) (let ((x176 (x83 x13))) (let ((x177 (x14 x176 x175))) (= x177 (x14 x176 (x86 (x14 (x83 x146) (x163 x177)))))))))
(declare-fun x175 (x8) x7)
(assert (forall ((x176 x7)) (let ((x177 (x83 x13))) (let ((x178 (x14 x177 x176))) (= (x14 x177 (x86 (x14 (x83 x151) (x175 x178)))) x178)))))
(declare-fun x176 (x8 Int x8) Bool)
(assert (forall ((x177 x7)) (forall ((x178 Int)) (forall ((x179 x7)) (let ((x181 (x14 (x82 x146) x179)) (x180 (x14 (x83 x146) x177))) (= (x176 x180 x178 x181) (>= (x89 x181 x180) x178)))))))
(declare-fun x177 (x8 Int x8) Bool)
(assert (forall ((x178 x7)) (forall ((x179 Int)) (forall ((x180 x7)) (let ((x182 (x14 (x82 x149) x180)) (x181 (x14 (x83 x149) x178))) (= (x177 x181 x179 x182) (>= (x89 x182 x181) x179)))))))
(declare-fun x178 (x8 Int x8) Bool)
(assert (forall ((x179 x7)) (forall ((x180 Int)) (forall ((x181 x7)) (let ((x183 (x14 (x82 x151) x181)) (x182 (x14 (x83 x151) x179))) (= (<= x180 (x89 x183 x182)) (x178 x182 x180 x183)))))))
(declare-fun x179 (x8 Int Int x8) Bool)
(assert (forall ((x180 x7)) (forall ((x181 Int)) (forall ((x182 Int)) (forall ((x183 x7)) (let ((x184 (x14 (x83 x146) x180)) (x185 (x14 (x82 x146) x183))) (= (x179 x184 x181 x182 x185) (and (= (x90 x185 x184) x181) (= (x89 x185 x184) x182)))))))))
(declare-fun x180 (x8 Int Int x8) Bool)
(assert (forall ((x181 x7)) (forall ((x182 Int)) (forall ((x183 Int)) (forall ((x184 x7)) (let ((x186 (x14 (x82 x149) x184)) (x185 (x14 (x83 x149) x181))) (= (x180 x185 x182 x183 x186) (and (= x183 (x89 x186 x185)) (= x182 (x90 x186 x185))))))))))
(declare-fun x181 (x8 Int Int x8) Bool)
(assert (forall ((x182 x7)) (forall ((x183 Int)) (forall ((x184 Int)) (forall ((x185 x7)) (let ((x187 (x14 (x82 x151) x185)) (x186 (x14 (x83 x151) x182))) (= (x181 x186 x183 x184 x187) (and (= (x89 x187 x186) x184) (= (x90 x187 x186) x183)))))))))
(declare-fun x182 (x8 Int Int x8) Bool)
(assert (forall ((x183 x7)) (forall ((x184 Int)) (forall ((x185 Int)) (forall ((x186 x7)) (let ((x188 (x14 (x82 x146) x186)) (x187 (x14 (x83 x146) x183))) (= (x182 x187 x184 x185 x188) (and (= (x90 x188 x187) x184) (= x185 (x89 x188 x187))))))))))
(declare-fun x183 (x8 Int Int x8) Bool)
(assert (forall ((x184 x7)) (forall ((x185 Int)) (forall ((x186 Int)) (forall ((x187 x7)) (let ((x189 (x14 (x82 x149) x187)) (x188 (x14 (x83 x149) x184))) (= (x183 x188 x185 x186 x189) (and (= (x89 x189 x188) x186) (= (x90 x189 x188) x185)))))))))
(declare-fun x184 (x8 Int Int x8) Bool)
(assert (forall ((x185 x7)) (forall ((x186 Int)) (forall ((x187 Int)) (forall ((x188 x7)) (let ((x189 (x14 (x83 x151) x185)) (x190 (x14 (x82 x151) x188))) (= (and (= (x90 x190 x189) x186) (= (x89 x190 x189) x187)) (x184 x189 x186 x187 x190))))))))
(declare-fun x185 (x8 Int Int x8) Bool)
(assert (forall ((x186 x7)) (forall ((x187 Int)) (forall ((x188 Int)) (forall ((x189 x7)) (let ((x191 (x14 (x82 x13) x189)) (x190 (x14 (x83 x13) x186))) (= (and (= (x89 x191 x190) x188) (= (x90 x191 x190) x187)) (x185 x190 x187 x188 x191))))))))
(declare-fun x186 (x8 Int Int x8) Bool)
(assert (forall ((x187 x7)) (forall ((x188 Int)) (forall ((x189 Int)) (forall ((x190 x7)) (let ((x191 (x14 (x83 x13) x187)) (x192 (x14 (x82 x13) x190))) (= (and (= x188 (x90 x192 x191)) (= x189 (x89 x192 x191))) (x186 x191 x188 x189 x192))))))))
(declare-fun x187 (x8 Int Int x8) Bool)
(assert (forall ((x188 x7)) (forall ((x189 Int)) (forall ((x190 Int)) (forall ((x191 x7)) (let ((x193 (x14 (x82 x13) x191)) (x192 (x14 (x83 x13) x188))) (= (and (= (x90 x193 x192) x189) (= (x89 x193 x192) x190)) (x187 x192 x189 x190 x193))))))))
(declare-fun x188 (x8 Int Int x8) Bool)
(assert (forall ((x189 x7)) (forall ((x190 Int)) (forall ((x191 Int)) (forall ((x192 x7)) (let ((x193 (x14 (x83 x146) x189)) (x194 (x14 (x82 x146) x192))) (= (and (<= (x90 x194 x193) x190) (<= x191 (x89 x194 x193))) (x188 x193 x190 x191 x194))))))))
(declare-fun x189 (x8 Int Int x8) Bool)
(assert (forall ((x190 x7)) (forall ((x191 Int)) (forall ((x192 Int)) (forall ((x193 x7)) (let ((x194 (x14 (x83 x149) x190)) (x195 (x14 (x82 x149) x193))) (= (and (>= x191 (x90 x195 x194)) (>= (x89 x195 x194) x192)) (x189 x194 x191 x192 x195))))))))
(declare-fun x190 (x8 Int Int x8) Bool)
(assert (forall ((x191 x7)) (forall ((x192 Int)) (forall ((x193 Int)) (forall ((x194 x7)) (let ((x196 (x14 (x82 x151) x194)) (x195 (x14 (x83 x151) x191))) (= (and (>= (x89 x196 x195) x193) (>= x192 (x90 x196 x195))) (x190 x195 x192 x193 x196))))))))
(declare-fun x191 (x8 Int Int x8) Bool)
(assert (forall ((x192 x7)) (forall ((x193 Int)) (forall ((x194 Int)) (forall ((x195 x7)) (let ((x197 (x14 (x82 x146) x195)) (x196 (x14 (x83 x146) x192))) (= (and (>= x193 (x90 x197 x196)) (>= (x89 x197 x196) x194)) (x191 x196 x193 x194 x197))))))))
(declare-fun x192 (x8 Int Int x8) Bool)
(assert (forall ((x193 x7)) (forall ((x194 Int)) (forall ((x195 Int)) (forall ((x196 x7)) (let ((x197 (x14 (x83 x149) x193)) (x198 (x14 (x82 x149) x196))) (= (and (>= (x89 x198 x197) x195) (>= x194 (x90 x198 x197))) (x192 x197 x194 x195 x198))))))))
(declare-fun x193 (x8 Int Int x8) Bool)
(assert (forall ((x194 x7)) (forall ((x195 Int)) (forall ((x196 Int)) (forall ((x197 x7)) (let ((x198 (x14 (x83 x151) x194)) (x199 (x14 (x82 x151) x197))) (= (x193 x198 x195 x196 x199) (and (<= x196 (x89 x199 x198)) (>= x195 (x90 x199 x198))))))))))
(declare-fun x194 () x7)
(assert (not (=> (= x2 x2) (forall ((x195 x7)) (forall ((x196 x7)) (forall ((x197 x7)) (forall ((x198 x7)) (let ((x199 (x82 x149)) (x200 (x14 (x83 x149) x196))) (let ((x202 (x14 x199 x195)) (x201 (x14 x199 x197))) (=> (and (x183 x200 0 (- 1 1) x201) (and (x135 x202 x201) (and (x123 (x14 (x116 x149) x198) x200 (x14 (x117 x149) x170)) (x136 x202 x200 1)))) (forall ((x203 x7)) (let ((x204 (x83 x149))) (=> (= (x14 x204 x203) x200) (forall ((x205 x7)) (forall ((x206 x7)) (forall ((x207 x7)) (let ((x208 (x14 x204 x205)) (x209 (x14 x199 x206))) (=> (and (and (and (x123 (x14 (x116 x149) x207) x208 (x14 (x117 x149) x170)) (x136 x201 x208 1)) (x135 x201 x209)) (x183 x208 0 (- 1 1) x209)) (forall ((x210 x7)) (let ((x211 (x14 x204 x210))) (=> (= x211 x208) (not (= (x14 x204 x203) x211)))))))))))))))))))))))
(assert (= 1 (x118 (x14 (x117 x151) x194))))
(assert (let ((x195 (x117 x151))) (x120 (x14 x195 x194) (x14 x195 x125))))
(assert (forall ((x195 x7)) (let ((x196 (x83 x151))) (let ((x197 (x14 x196 x195))) (= x197 (x14 x196 (x161 (x14 x138 (x160 x197)))))))))
(assert (forall ((x195 x7)) (let ((x196 (x83 x151))) (let ((x197 (x14 x196 x195))) (= x197 (x14 x196 (x175 (x14 (x83 x13) (x86 x197)))))))))
(assert (forall ((x195 x7)) (forall ((x196 x7)) (x123 (x14 (x116 x151) x196) (x14 (x83 x151) x195) (x14 (x117 x151) x194)))))
(check-sat)
(assert (not (=> (= x2 x2) (forall ((x195 x7)) (forall ((x196 x7)) (forall ((x197 x7)) (forall ((x198 x7)) (let ((x200 (x14 (x83 x149) x196)) (x199 (x82 x149))) (let ((x201 (x14 x199 x197)) (x202 (x14 x199 x195))) (=> (and (x183 x200 0 (- 1 1) x201) (and (and (x123 (x14 (x116 x149) x198) x200 (x14 (x117 x149) x170)) (x136 x202 x200 1)) (x135 x202 x201))) (forall ((x203 x7)) (let ((x204 (x83 x149))) (=> (= (x14 x204 x203) x200) (forall ((x205 x7)) (forall ((x206 x7)) (forall ((x207 x7)) (let ((x208 (x14 x204 x205)) (x209 (x14 x199 x206))) (=> (and (x183 x208 0 (- 1 1) x209) (and (x135 x201 x209) (and (x136 x201 x208 1) (x123 (x14 (x116 x149) x207) x208 (x14 (x117 x149) x170))))) (forall ((x210 x7)) (let ((x211 (x14 x204 x210))) (=> (= x208 x211) (=> (not (= x211 (x14 x204 x203))) (forall ((x212 Int)) (let ((x213 (x93 (x14 x204 x203) x211))) (=> (= x213 x212) (=> (<= 0 x212) (>= x213 0)))))))))))))))))))))))))))
(check-sat)
(assert (not (=> true (>= 1 0))))
(check-sat)
(assert (not (=> true (forall ((x195 x7)) (=> (<= 0 1) (forall ((x196 x7)) (forall ((x197 x7)) (forall ((x198 x7)) (let ((x199 (x82 x149)) (x200 (x14 (x83 x149) x196))) (let ((x202 (x14 x199 x195)) (x201 (x14 x199 x197))) (=> (and (and (x135 x202 x201) (and (x123 (x14 (x116 x149) x198) x200 (x14 (x117 x149) x170)) (x136 x202 x200 1))) (x183 x200 0 (- 1 1) x201)) (<= 0 (x89 x201 x200)))))))))))))
(check-sat)
(assert (not (=> true (forall ((x195 x7)) (=> (<= 0 1) (forall ((x196 x7)) (forall ((x197 x7)) (forall ((x198 x7)) (let ((x199 (x82 x149)) (x200 (x14 (x83 x149) x196))) (let ((x202 (x14 x199 x195)) (x201 (x14 x199 x197))) (=> (and (and (x135 x202 x201) (and (x123 (x14 (x116 x149) x198) x200 (x14 (x117 x149) x170)) (x136 x202 x200 1))) (x183 x200 0 (- 1 1) x201)) (=> (>= (x89 x201 x200) 0) (forall ((x203 x7)) (let ((x204 (x83 x149))) (=> (= x200 (x14 x204 x203)) (=> (>= 1 0) (forall ((x205 x7)) (forall ((x206 x7)) (forall ((x207 x7)) (let ((x209 (x14 x199 x206)) (x208 (x14 x204 x205))) (=> (and (x183 x208 0 (- 1 1) x209) (and (x135 x201 x209) (and (x136 x201 x208 1) (x123 (x14 (x116 x149) x207) x208 (x14 (x117 x149) x170))))) (>= (x89 x209 x208) 0))))))))))))))))))))))
(check-sat)
(assert (not (=> true (forall ((x195 x7)) (=> (<= 0 1) (forall ((x196 x7)) (forall ((x197 x7)) (forall ((x198 x7)) (let ((x199 (x82 x149)) (x200 (x14 (x83 x149) x196))) (let ((x202 (x14 x199 x195)) (x201 (x14 x199 x197))) (=> (and (and (and (x136 x202 x200 1) (x123 (x14 (x116 x149) x198) x200 (x14 (x117 x149) x170))) (x135 x202 x201)) (x183 x200 0 (- 1 1) x201)) (=> (<= 0 (x89 x201 x200)) (forall ((x203 x7)) (let ((x204 (x83 x149))) (=> (= (x14 x204 x203) x200) (=> (<= 0 1) (forall ((x205 x7)) (forall ((x206 x7)) (forall ((x207 x7)) (let ((x208 (x14 x204 x205)) (x209 (x14 x199 x206))) (=> (and (and (and (x123 (x14 (x116 x149) x207) x208 (x14 (x117 x149) x170)) (x136 x201 x208 1)) (x135 x201 x209)) (x183 x208 0 (- 1 1) x209)) (=> (>= (x89 x209 x208) 0) (forall ((x210 x7)) (let ((x211 (x14 x204 x203)) (x213 (x84 x149)) (x212 (x14 x204 x210))) (=> (= x212 x208) (=> (not (= x211 x212)) (= (x14 x213 (x85 x211)) (x14 x213 (x85 x212)))))))))))))))))))))))))))))
(check-sat)
(assert (not (=> true (forall ((x195 x7)) (=> (>= 1 0) (forall ((x196 x7)) (forall ((x197 x7)) (forall ((x198 x7)) (let ((x200 (x14 (x83 x149) x196)) (x199 (x82 x149))) (let ((x201 (x14 x199 x197)) (x202 (x14 x199 x195))) (=> (and (x183 x200 0 (- 1 1) x201) (and (and (x136 x202 x200 1) (x123 (x14 (x116 x149) x198) x200 (x14 (x117 x149) x170))) (x135 x202 x201))) (=> (<= 0 (x89 x201 x200)) (forall ((x203 x7)) (let ((x204 (x83 x149))) (=> (= x200 (x14 x204 x203)) (=> (<= 0 1) (forall ((x205 x7)) (forall ((x206 x7)) (forall ((x207 x7)) (let ((x208 (x14 x204 x205)) (x209 (x14 x199 x206))) (=> (and (and (x135 x201 x209) (and (x136 x201 x208 1) (x123 (x14 (x116 x149) x207) x208 (x14 (x117 x149) x170)))) (x183 x208 0 (- 1 1) x209)) (=> (<= 0 (x89 x209 x208)) (forall ((x210 x7)) (let ((x211 (x14 x204 x203)) (x212 (x14 x204 x210))) (=> (= x208 x212) (=> (not (= x212 x211)) (=> (x92 x211 x212) (forall ((x213 Int)) (=> (= x213 (x93 x211 x212)) (=> (> 0 x213) (<= 0 (x89 x209 x211))))))))))))))))))))))))))))))))
(check-sat)
(assert (not (=> true (forall ((x195 x7)) (=> (<= 0 1) (forall ((x196 x7)) (forall ((x197 x7)) (forall ((x198 x7)) (let ((x200 (x14 (x83 x149) x196)) (x199 (x82 x149))) (let ((x201 (x14 x199 x197)) (x202 (x14 x199 x195))) (=> (and (x183 x200 0 (- 1 1) x201) (and (x135 x202 x201) (and (x136 x202 x200 1) (x123 (x14 (x116 x149) x198) x200 (x14 (x117 x149) x170))))) (=> (<= 0 (x89 x201 x200)) (forall ((x203 x7)) (let ((x204 (x83 x149))) (=> (= x200 (x14 x204 x203)) (=> (>= 1 0) (forall ((x205 x7)) (forall ((x206 x7)) (forall ((x207 x7)) (let ((x209 (x14 x199 x206)) (x208 (x14 x204 x205))) (=> (and (x183 x208 0 (- 1 1) x209) (and (x135 x201 x209) (and (x136 x201 x208 1) (x123 (x14 (x116 x149) x207) x208 (x14 (x117 x149) x170))))) (=> (<= 0 (x89 x209 x208)) (forall ((x210 x7)) (let ((x211 (x14 x204 x203)) (x212 (x14 x204 x210))) (=> (= x212 x208) (=> (not (= x211 x212)) (=> (x92 x211 x212) (forall ((x213 Int)) (=> (= x213 (x93 x211 x212)) (=> (< x213 0) (=> (<= 0 (x89 x209 x211)) (forall ((x214 x7)) (let ((x216 (x101 x149)) (x215 (x14 x199 x214))) (=> (and (< (x89 x215 x211) (x90 x215 x211)) (x137 x209 x215 (x14 x216 (x107 (x14 x216 (x103 x211)) 0 (x89 x209 x211))))) (<= 0 (x89 x215 x212))))))))))))))))))))))))))))))))))))
(check-sat)
(assert (not (=> true (forall ((x195 x7)) (=> (>= 1 0) (forall ((x196 x7)) (forall ((x197 x7)) (forall ((x198 x7)) (let ((x200 (x14 (x83 x149) x196)) (x199 (x82 x149))) (let ((x202 (x14 x199 x195)) (x201 (x14 x199 x197))) (=> (and (and (x135 x202 x201) (and (x136 x202 x200 1) (x123 (x14 (x116 x149) x198) x200 (x14 (x117 x149) x170)))) (x183 x200 0 (- 1 1) x201)) (=> (>= (x89 x201 x200) 0) (forall ((x203 x7)) (let ((x204 (x83 x149))) (=> (= x200 (x14 x204 x203)) (=> (>= 1 0) (forall ((x205 x7)) (forall ((x206 x7)) (forall ((x207 x7)) (let ((x208 (x14 x204 x205)) (x209 (x14 x199 x206))) (=> (and (x183 x208 0 (- 1 1) x209) (and (x135 x201 x209) (and (x123 (x14 (x116 x149) x207) x208 (x14 (x117 x149) x170)) (x136 x201 x208 1)))) (=> (<= 0 (x89 x209 x208)) (forall ((x210 x7)) (let ((x212 (x14 x204 x210)) (x211 (x14 x204 x203))) (=> (= x208 x212) (=> (not (= x212 x211)) (=> (x92 x211 x212) (forall ((x213 Int)) (let ((x214 (x93 x211 x212))) (=> (= x214 x213) (=> (<= 0 x213) (=> (<= 0 x214) (=> (x92 x211 x212) (forall ((x215 Int)) (=> (= x214 x215) (>= x215 (- 2147483648)))))))))))))))))))))))))))))))))))))
(check-sat)
(assert (not (=> true (forall ((x195 x7)) (=> (<= 0 1) (forall ((x196 x7)) (forall ((x197 x7)) (forall ((x198 x7)) (let ((x200 (x14 (x83 x149) x196)) (x199 (x82 x149))) (let ((x202 (x14 x199 x195)) (x201 (x14 x199 x197))) (=> (and (x183 x200 0 (- 1 1) x201) (and (x135 x202 x201) (and (x123 (x14 (x116 x149) x198) x200 (x14 (x117 x149) x170)) (x136 x202 x200 1)))) (=> (>= (x89 x201 x200) 0) (forall ((x203 x7)) (let ((x204 (x83 x149))) (=> (= (x14 x204 x203) x200) (=> (<= 0 1) (forall ((x205 x7)) (forall ((x206 x7)) (forall ((x207 x7)) (let ((x209 (x14 x199 x206)) (x208 (x14 x204 x205))) (=> (and (x183 x208 0 (- 1 1) x209) (and (and (x123 (x14 (x116 x149) x207) x208 (x14 (x117 x149) x170)) (x136 x201 x208 1)) (x135 x201 x209))) (=> (>= (x89 x209 x208) 0) (forall ((x210 x7)) (let ((x211 (x14 x204 x203)) (x212 (x14 x204 x210))) (=> (= x212 x208) (=> (not (= x212 x211)) (=> (x92 x211 x212) (forall ((x213 Int)) (let ((x214 (x93 x211 x212))) (=> (= x214 x213) (=> (<= 0 x213) (=> (<= 0 x214) (=> (x92 x211 x212) (forall ((x215 Int)) (=> (= x215 x214) (<= x215 2147483647))))))))))))))))))))))))))))))))))))
(check-sat)
(assert (not (=> true (forall ((x195 x7)) (=> (>= 1 0) (forall ((x196 x7)) (forall ((x197 x7)) (forall ((x198 x7)) (let ((x199 (x82 x149)) (x200 (x14 (x83 x149) x196))) (let ((x202 (x14 x199 x195)) (x201 (x14 x199 x197))) (=> (and (x183 x200 0 (- 1 1) x201) (and (x135 x202 x201) (and (x123 (x14 (x116 x149) x198) x200 (x14 (x117 x149) x170)) (x136 x202 x200 1)))) (=> (<= 0 (x89 x201 x200)) (forall ((x203 x7)) (let ((x204 (x83 x149))) (=> (= x200 (x14 x204 x203)) (=> (>= 1 0) (forall ((x205 x7)) (forall ((x206 x7)) (forall ((x207 x7)) (let ((x208 (x14 x204 x205)) (x209 (x14 x199 x206))) (=> (and (x183 x208 0 (- 1 1) x209) (and (x135 x201 x209) (and (x136 x201 x208 1) (x123 (x14 (x116 x149) x207) x208 (x14 (x117 x149) x170))))) (=> (>= (x89 x209 x208) 0) (forall ((x210 x7)) (let ((x211 (x14 x204 x203)) (x212 (x14 x204 x210))) (=> (= x208 x212) (=> (not (= x211 x212)) (=> (x92 x211 x212) (forall ((x213 Int)) (let ((x214 (x93 x211 x212))) (=> (= x214 x213) (=> (>= x213 0) (=> (>= x214 0) (=> (x92 x211 x212) (forall ((x215 Int)) (=> (= x214 x215) (=> (and (<= x215 2147483647) (>= x215 (- 2147483648))) (forall ((x216 x7)) (let ((x217 (x164 (x14 x147 x216)))) (=> (= x215 x217) (=> (< 0 x217) (<= 0 (x89 x209 x211))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(assert (not (=> true (forall ((x195 x7)) (=> (<= 0 1) (forall ((x196 x7)) (forall ((x197 x7)) (forall ((x198 x7)) (let ((x199 (x82 x149)) (x200 (x14 (x83 x149) x196))) (let ((x202 (x14 x199 x195)) (x201 (x14 x199 x197))) (=> (and (and (and (x136 x202 x200 1) (x123 (x14 (x116 x149) x198) x200 (x14 (x117 x149) x170))) (x135 x202 x201)) (x183 x200 0 (- 1 1) x201)) (=> (<= 0 (x89 x201 x200)) (forall ((x203 x7)) (let ((x204 (x83 x149))) (=> (= (x14 x204 x203) x200) (=> (>= 1 0) (forall ((x205 x7)) (forall ((x206 x7)) (forall ((x207 x7)) (let ((x209 (x14 x199 x206)) (x208 (x14 x204 x205))) (=> (and (x183 x208 0 (- 1 1) x209) (and (x135 x201 x209) (and (x123 (x14 (x116 x149) x207) x208 (x14 (x117 x149) x170)) (x136 x201 x208 1)))) (=> (>= (x89 x209 x208) 0) (forall ((x210 x7)) (let ((x212 (x14 x204 x210)) (x211 (x14 x204 x203))) (=> (= x212 x208) (=> (not (= x211 x212)) (=> (x92 x211 x212) (forall ((x213 Int)) (let ((x214 (x93 x211 x212))) (=> (= x213 x214) (=> (>= x213 0) (=> (>= x214 0) (=> (x92 x211 x212) (forall ((x215 Int)) (=> (= x214 x215) (=> (and (<= (- 2147483648) x215) (>= 2147483647 x215)) (forall ((x216 x7)) (let ((x217 (x164 (x14 x147 x216)))) (=> (= x215 x217) (=> (> x217 0) (=> (<= 0 (x89 x209 x211)) (forall ((x218 x7)) (let ((x219 (x101 x149)) (x220 (x14 x199 x218))) (=> (and (> (x90 x220 x211) (x89 x220 x211)) (x137 x209 x220 (x14 x219 (x107 (x14 x219 (x103 x211)) 0 (x89 x209 x211))))) (<= 0 (x89 x220 x212))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(assert (not (=> true (forall ((x195 x7)) (=> (<= 0 1) (forall ((x196 x7)) (forall ((x197 x7)) (forall ((x198 x7)) (let ((x199 (x82 x149)) (x200 (x14 (x83 x149) x196))) (let ((x201 (x14 x199 x197)) (x202 (x14 x199 x195))) (=> (and (x183 x200 0 (- 1 1) x201) (and (and (x136 x202 x200 1) (x123 (x14 (x116 x149) x198) x200 (x14 (x117 x149) x170))) (x135 x202 x201))) (=> (<= 0 (x89 x201 x200)) (forall ((x203 x7)) (let ((x204 (x83 x149))) (=> (= x200 (x14 x204 x203)) (=> (>= 1 0) (forall ((x205 x7)) (forall ((x206 x7)) (forall ((x207 x7)) (let ((x208 (x14 x204 x205)) (x209 (x14 x199 x206))) (=> (and (and (x135 x201 x209) (and (x136 x201 x208 1) (x123 (x14 (x116 x149) x207) x208 (x14 (x117 x149) x170)))) (x183 x208 0 (- 1 1) x209)) (=> (<= 0 (x89 x209 x208)) (forall ((x210 x7)) (let ((x211 (x14 x204 x203)) (x212 (x14 x204 x210))) (=> (= x208 x212) (=> (not (= x211 x212)) (=> (x92 x211 x212) (forall ((x213 Int)) (let ((x214 (x93 x211 x212))) (=> (= x214 x213) (=> (>= x213 0) (=> (<= 0 x214) (=> (x92 x211 x212) (forall ((x215 Int)) (=> (= x214 x215) (=> (and (>= 2147483647 x215) (<= (- 2147483648) x215)) (forall ((x216 x7)) (let ((x217 (x164 (x14 x147 x216)))) (=> (= x217 x215) (=> (<= x217 0) (>= (x89 x209 x211) 0)))))))))))))))))))))))))))))))))))))))))
(check-sat)
(assert (not (=> true (forall ((x195 x7)) (=> (>= 1 0) (forall ((x196 x7)) (forall ((x197 x7)) (forall ((x198 x7)) (let ((x200 (x14 (x83 x149) x196)) (x199 (x82 x149))) (let ((x201 (x14 x199 x197)) (x202 (x14 x199 x195))) (=> (and (x183 x200 0 (- 1 1) x201) (and (and (x136 x202 x200 1) (x123 (x14 (x116 x149) x198) x200 (x14 (x117 x149) x170))) (x135 x202 x201))) (=> (<= 0 (x89 x201 x200)) (forall ((x203 x7)) (let ((x204 (x83 x149))) (=> (= x200 (x14 x204 x203)) (=> (<= 0 1) (forall ((x205 x7)) (forall ((x206 x7)) (forall ((x207 x7)) (let ((x209 (x14 x199 x206)) (x208 (x14 x204 x205))) (=> (and (and (x135 x201 x209) (and (x136 x201 x208 1) (x123 (x14 (x116 x149) x207) x208 (x14 (x117 x149) x170)))) (x183 x208 0 (- 1 1) x209)) (=> (<= 0 (x89 x209 x208)) (forall ((x210 x7)) (let ((x211 (x14 x204 x203)) (x212 (x14 x204 x210))) (=> (= x208 x212) (=> (not (= x212 x211)) (=> (x92 x211 x212) (forall ((x213 Int)) (let ((x214 (x93 x211 x212))) (=> (= x213 x214) (=> (<= 0 x213) (=> (<= 0 x214) (=> (x92 x211 x212) (forall ((x215 Int)) (=> (= x215 x214) (=> (and (>= 2147483647 x215) (>= x215 (- 2147483648))) (forall ((x216 x7)) (let ((x217 (x164 (x14 x147 x216)))) (=> (= x217 x215) (=> (>= 0 x217) (=> (<= 0 (x89 x209 x211)) (forall ((x218 x7)) (let ((x219 (x101 x149)) (x220 (x14 x199 x218))) (=> (and (x137 x209 x220 (x14 x219 (x107 (x14 x219 (x103 x211)) 0 (x89 x209 x211)))) (< (x89 x220 x211) (x90 x220 x211))) (>= (x89 x220 x212) 0)))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(exit)
